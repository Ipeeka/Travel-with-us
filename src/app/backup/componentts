import { Component } from '@angular/core';
import { FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';
import { EmployeeModel } from './model/employee'; // Ensure this path is correct
import { NgFor } from '@angular/common';


@Component({
  selector: 'app-root',
  standalone: true,
  imports: [ReactiveFormsModule, NgFor],
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css'] // Corrected to styleUrls
})
export class AppComponent {
  employeeForm!: FormGroup;
  employeeList: EmployeeModel[] = [];

  constructor() {
    this.createForm();
    this.loadEmployees();
  }

  createForm() {
    this.employeeForm = new FormGroup({
      empId: new FormControl(''),
      emailId: new FormControl(''),
      name: new FormControl(''),
      city: new FormControl(''),
      address: new FormControl(''),
      contactNo: new FormControl(''),
      pinCode: new FormControl(''),
      state: new FormControl(''),
      dob: new FormControl('')
    });
  }

  loadEmployees() {
    const oldData = localStorage.getItem("EmpData");
    if (oldData) {
      this.employeeList = JSON.parse(oldData);
    }
  }

  onSave() {
    if (this.employeeForm.valid) { // Check if the form is valid
      const newEmployee: EmployeeModel = {
        ...this.employeeForm.value,
        empId: this.employeeList.length ? this.employeeList[this.employeeList.length - 1].empId + 1 : 1 // Generate empId
      };
      this.employeeList.unshift(newEmployee);
      localStorage.setItem("EmpData", JSON.stringify(this.employeeList));
      this.employeeForm.reset(); // Clear the form after saving
    }
  }

  onReset() {
    this.employeeForm.reset(); // Reset the form controls
  }

  find(id: number) {
    const employee = this.employeeList.find(emp => emp.empId === id);
    if (employee) {
      this.employeeForm.patchValue(employee);
    }
  }

  delete(id: number) {
    this.employeeList = this.employeeList.filter(emp => emp.empId !== id);
    localStorage.setItem("EmpData", JSON.stringify(this.employeeList));
  }
  
}
